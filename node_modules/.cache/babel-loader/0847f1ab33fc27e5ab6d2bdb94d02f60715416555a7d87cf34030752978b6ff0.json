{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\braya\\\\OneDrive\\\\Documentos\\\\DES\\\\cifrado_des\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DES } from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [encryptedMessage, setEncryptedMessage] = useState('');\n  const [decryptedMessage, setDecryptedMessage] = useState('');\n  const [key, setKey] = useState('');\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      setMessage(e.target.result);\n    };\n    reader.readAsText(file);\n  };\n\n  // Importa la librería crypto-js para utilizar el algoritmo DES\n\n  const encryptMessage = () => {\n    if (message && key.length === 8) {\n      // Realiza el cifrado utilizando el algoritmo DES\n      const encrypted = DES.encrypt(message, key).toString();\n      setEncryptedMessage(encrypted);\n    }\n  };\n  const decryptMessage = () => {\n    if (encryptedMessage && key.length === 8) {\n      // Realiza el descifrado utilizando el algoritmo DES\n      const decrypted = DES.decrypt(encryptedMessage, key).toString(ENC.Utf8);\n      setDecryptedMessage(decrypted);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white-smoke min-h-screen flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: \"Cifrador y Descifrador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        onChange: handleFileUpload,\n        className: \"bg-navy text-white rounded py-2 px-4 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clave (8 caracteres)\",\n        value: key,\n        onChange: e => setKey(e.target.value),\n        className: \"bg-navy text-white rounded py-2 px-4 mb-4\",\n        maxLength: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: encryptMessage,\n        className: \"bg-navy text-white rounded py-2 px-4 mb-4\",\n        children: \"Cifrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decryptMessage,\n        className: \"bg-navy text-white rounded py-2 px-4 mb-4\",\n        children: \"Descifrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), encryptedMessage && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: encryptedMessage,\n        readOnly: true,\n        className: \"bg-navy text-white rounded py-2 px-4 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), decryptedMessage && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: decryptedMessage,\n        readOnly: true,\n        className: \"bg-navy text-white rounded py-2 px-4 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2aIRLbTzDuxRXXw1DzXTxsNw7Vw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DES","jsxDEV","_jsxDEV","App","_s","message","setMessage","encryptedMessage","setEncryptedMessage","decryptedMessage","setDecryptedMessage","key","setKey","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsText","encryptMessage","length","encrypted","encrypt","toString","decryptMessage","decrypted","decrypt","ENC","Utf8","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","placeholder","value","maxLength","onClick","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/braya/OneDrive/Documentos/DES/cifrado_des/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DES } from 'crypto-js';\nconst App = () => {\n  const [message, setMessage] = useState('');\n  const [encryptedMessage, setEncryptedMessage] = useState('');\n  const [decryptedMessage, setDecryptedMessage] = useState('');\n  const [key, setKey] = useState('');\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      setMessage(e.target.result);\n    };\n    reader.readAsText(file);\n  };\n\n  // Importa la librería crypto-js para utilizar el algoritmo DES\n\n\nconst encryptMessage = () => {\n  if (message && key.length === 8) {\n    // Realiza el cifrado utilizando el algoritmo DES\n    const encrypted = DES.encrypt(message, key).toString();\n    setEncryptedMessage(encrypted);\n  }\n};\n\nconst decryptMessage = () => {\n  if (encryptedMessage && key.length === 8) {\n    // Realiza el descifrado utilizando el algoritmo DES\n    const decrypted = DES.decrypt(encryptedMessage, key).toString(ENC.Utf8);\n    setDecryptedMessage(decrypted);\n  }\n};\n\n  return (\n    <div className=\"bg-white-smoke min-h-screen flex flex-col items-center justify-center\">\n      <h2 className=\"text-2xl mb-4\">Cifrador y Descifrador</h2>\n      <div className=\"flex flex-col items-center\">\n        <input\n          type=\"file\"\n          accept=\".txt\"\n          onChange={handleFileUpload}\n          className=\"bg-navy text-white rounded py-2 px-4 mb-4\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Clave (8 caracteres)\"\n          value={key}\n          onChange={(e) => setKey(e.target.value)}\n          className=\"bg-navy text-white rounded py-2 px-4 mb-4\"\n          maxLength={8}\n        />\n        <button\n          onClick={encryptMessage}\n          className=\"bg-navy text-white rounded py-2 px-4 mb-4\"\n        >\n          Cifrar\n        </button>\n        <button\n          onClick={decryptMessage}\n          className=\"bg-navy text-white rounded py-2 px-4 mb-4\"\n        >\n          Descifrar\n        </button>\n        {encryptedMessage && (\n          <textarea\n            value={encryptedMessage}\n            readOnly\n            className=\"bg-navy text-white rounded py-2 px-4 mb-4\"\n          />\n        )}\n        {decryptedMessage && (\n          <textarea\n            value={decryptedMessage}\n            readOnly\n            className=\"bg-navy text-white rounded py-2 px-4 mb-4\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}